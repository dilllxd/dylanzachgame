name: godot-ci export
on: push

env:
  GODOT_VERSION: 4.2.1
  EXPORT_NAME: OurGame
  PROJECT_PATH: OurGame

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set Game Version
        id: set_game_version
        run: |
          GAME_VERSION=$(wget -qO- https://raw.githubusercontent.com/dilllxd/dylanzachgame/main/OurGame/version.cfg | awk -F= '/version/{gsub(/"/, "", $2); print $2}')
          echo "GAME_VERSION=$GAME_VERSION" >> $GITHUB_ENV
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows
      - name: Butler Upload - itch.io
        uses: josephbmanley/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: build/windows
          VERSION: ${{ env.GAME_VERSION }}
      - name: Zip for Release
        run: |
          cd build
          zip -r windows.zip windows
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/windows.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          skipIfReleaseExists: true
          tag: v${{ env.GAME_VERSION }}-windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set Game Version
        id: set_game_version
        run: |
          GAME_VERSION=$(wget -qO- https://raw.githubusercontent.com/dilllxd/dylanzachgame/main/OurGame/version.cfg | awk -F= '/version/{gsub(/"/, "", $2); print $2}')
          echo "GAME_VERSION=$GAME_VERSION" >> $GITHUB_ENV
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux
      - name: Butler Upload - itch.io
        uses: josephbmanley/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: linux
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: build/linux
          VERSION: ${{ env.GAME_VERSION }}
      - name: Zip for Release
        run: |
          cd build
          zip -r linux.zip linux
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/linux.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          skipIfReleaseExists: true
          tag: v${{ env.GAME_VERSION }}-linux

  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set Game Version
        id: set_game_version
        run: |
          GAME_VERSION=$(wget -qO- https://raw.githubusercontent.com/dilllxd/dylanzachgame/main/OurGame/version.cfg | awk -F= '/version/{gsub(/"/, "", $2); print $2}')
          echo "GAME_VERSION=$GAME_VERSION" >> $GITHUB_ENV
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "HTML5" ../build/web/index.html
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      - name: Butler Upload - itch.io
        uses: josephbmanley/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: web
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: build/web
          VERSION: ${{ env.GAME_VERSION }}
      - name: Enable SharedArrayBuffer for GitHub Pages
        run: |
          cd ./build/web
          apt-get install -y curl
          curl -fsSL https://github.com/gzuidhof/coi-serviceworker/raw/master/coi-serviceworker.js > coi-serviceworker.js
          sed -i 's#\(		<script src="index.js"></script>\)#		<script src="coi-serviceworker.js"></script>\n\1#g' index.html
      - name: Deploy GH Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          single-commit: true
          folder: build/web
      - name: Zip for Release
        run: |
          cd build
          zip -r web.zip web
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/web.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          skipIfReleaseExists: true
          tag: v${{ env.GAME_VERSION }}-web